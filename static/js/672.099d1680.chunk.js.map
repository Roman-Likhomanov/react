{"version":3,"file":"static/js/672.099d1680.chunk.js","mappings":"8JACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,mBCWhL,EARmB,SAACA,GAChB,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACI,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAsCJ,EAAMK,UCAxD,EAJgB,SAACL,GACb,OAAO,gBAAKC,UAAWC,EAAAA,OAAhB,SAA2BF,EAAMM,W,iDC8BtCC,GAAcC,EAAAA,EAAAA,GAAiB,IAa/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAXL,SAACV,GACpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUX,GAAcF,KAAK,iBAAiBc,YAAY,0BAErG,0BAAK,oDAOjB,EAxCgB,SAACnB,GAEb,IAAIoB,EAAQpB,EAAMqB,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBD,GAAIqB,EAAErB,IAAZqB,EAAErB,OAC1EsB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAExB,OAMnF,OAAKJ,EAAM6B,QAGP,iBAAK5B,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKoB,KAEL,gBAAKrB,UAAWC,EAAAA,SAAhB,UACI,yBAAMwB,OAEV,SAACjB,EAAD,CAAqBG,SAdT,SAACkB,GACjB9B,EAAM+B,YAAYD,EAAOE,uBAGH,SAAC,KAAD,CAAU7B,GAAI,Y,6BCE5C,GAAe8B,E,QAAAA,KACXC,EAAAA,EAAAA,KAdkB,SAACd,GACnB,MAAO,CACXC,YAAaD,EAAMC,gBAGM,SAACc,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,GAASC,EAAAA,EAAAA,GAAmBJ,SAOpCK,EAAAA,EAFJ,CAGGC,I,gJCpBCC,EAA6B,SAACnB,GAAD,MAAY,CACzCS,OAAQT,EAAMoB,KAAKX,SAGVQ,EAAmB,SAACI,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAIC,KAAK3C,MAAM6B,QACR,SAACY,GAAD,UAAeE,KAAK3C,SADG,SAAC,KAAD,CAAUG,GAAI,eAHT,GACXyC,EAAAA,WAShC,OAFqCV,EAAAA,EAAAA,IAAQK,EAARL,CAAoCQ","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Y20aJ\",\"dialogsItems\":\"Dialogs_dialogsItems__HHIas\",\"active\":\"Dialogs_active__zuxMj\",\"messages\":\"Dialogs_messages__hfHv8\",\"message\":\"Dialogs_message__TIiOA\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div><button>Add message</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\ndialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))  \r\n        }  \r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect  \r\n) (Dialogs);","import React from \"react\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n    });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) return <Navigate to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","className","s","to","id","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}