{"version":3,"file":"static/js/752.f5d4b0bc.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__aeM46\",\"mainPhoto\":\"ProfileInfo_mainPhoto__8Lfd2\",\"contact\":\"ProfileInfo_contact__Uoq2V\"};","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                   <b>Status:</b><span onDoubleClick={activateEditMode}> {props.status || \"---\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import { reduxForm } from \"redux-form\";\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n\r\n        <div><button>save</button></div>\r\n        { error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false)\r\n      });\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} /><br />\r\n        {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n\r\n        {editMode\r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n          : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n    <div>\r\n      <b>Full name</b>: {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n    <div>\r\n      <b>About me</b>: {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__PIYq2\",\"posts\":\"MyPosts_posts__p3Nps\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__OhDvo\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://a.d-cd.net/bd88a1s-1920.jpg'/>\r\n        {props.message}\r\n        <div>\r\n          <span>like</span> {props.likesCount}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />)\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>)\r\n}\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n      <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} placeholder=\"Post message\" />\r\n      </div>\r\n      <div><button>Add post</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatcToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText)); \r\n    }\r\n  }\r\n}\r\n\r\n  const MyPostsContainer = connect(mapStateToProps, mapDispatcToProps)(MyPosts);\r\n\r\n  export default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return <div>\r\n    <ProfileInfo savePhoto={props.savePhoto}\r\n      isOwner={props.isOwner}\r\n      profile={props.profile}\r\n      status={props.status}\r\n      saveProfile={props.saveProfile}\r\n      updateStatus={props.updateStatus} />\r\n    <MyPostsContainer />\r\n  </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, savePhoto, getStatus, updateStatus, saveProfile } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { useMatch } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match ? this.props.match.params.userId : this.props.authorizedUserId;\r\n    \r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if((this.props.match && this.props.match.params.userId) != (prevProps.match && prevProps.match.params.userId)){\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Profile  {...this.props}\r\n      isOwner={!this.props.match} \r\n      profile={this.props.profile} \r\n      status={this.props.status} \r\n      updateStatus={this.props.updateStatus}\r\n      savePhoto={this.props.savePhoto} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nlet WithUrlDataContainerComponent = (props) => {\r\n  const match = useMatch('/profile/:userId/');\r\n  return <ProfileContainer {...props} match={match} />;\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withAuthRedirect\r\n)(WithUrlDataContainerComponent);","import React from \"react\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n    });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) return <Navigate to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","initialValues","formData","then","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","component","name","validate","required","placeholder","postsElements","posts","p","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","React","compose","auth","isAuth","withAuthRedirect","useMatch","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}